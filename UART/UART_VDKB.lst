CCS PCM C Compiler, Version 5.115, 43599               24-Nov-23 15:01

               Filename:   C:\Users\84859\Desktop\VXL\UART\UART_VDKB.lst

               ROM used:   1009 words (12%)
                           Largest free fragment is 2048
               RAM used:   27 (7%) at main() level
                           42 (11%) worst case
               Stack used: 4 locations (3 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  03
0001:  MOVWF  0A
0002:  GOTO   32C
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BSF    03.6
0016:  MOVF   0D,W
0017:  BCF    03.6
0018:  MOVWF  27
0019:  BSF    03.6
001A:  MOVF   0F,W
001B:  BCF    03.6
001C:  MOVWF  28
001D:  BSF    03.6
001E:  MOVF   0C,W
001F:  BCF    03.6
0020:  MOVWF  29
0021:  BSF    03.6
0022:  MOVF   0E,W
0023:  BCF    03.6
0024:  MOVWF  2A
0025:  BCF    03.7
0026:  BCF    03.5
0027:  MOVLW  8C
0028:  MOVWF  04
0029:  BTFSS  00.5
002A:  GOTO   02D
002B:  BTFSC  0C.5
002C:  GOTO   04E
002D:  MOVF   22,W
002E:  MOVWF  04
002F:  MOVF   23,W
0030:  MOVWF  77
0031:  MOVF   24,W
0032:  MOVWF  78
0033:  MOVF   25,W
0034:  MOVWF  79
0035:  MOVF   26,W
0036:  MOVWF  7A
0037:  MOVF   27,W
0038:  BSF    03.6
0039:  MOVWF  0D
003A:  BCF    03.6
003B:  MOVF   28,W
003C:  BSF    03.6
003D:  MOVWF  0F
003E:  BCF    03.6
003F:  MOVF   29,W
0040:  BSF    03.6
0041:  MOVWF  0C
0042:  BCF    03.6
0043:  MOVF   2A,W
0044:  BSF    03.6
0045:  MOVWF  0E
0046:  BCF    03.6
0047:  MOVF   20,W
0048:  MOVWF  0A
0049:  SWAPF  21,W
004A:  MOVWF  03
004B:  SWAPF  7F,F
004C:  SWAPF  7F,W
004D:  RETFIE
004E:  BCF    0A.3
004F:  BCF    0A.4
0050:  GOTO   063
.................... #include<16f887.h>
.................... //////////// Standard Header file for the PIC16F887 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F887
0051:  DATA C4,22
0052:  DATA 4D,10
0053:  DATA 53,28
0054:  DATA 3A,10
0055:  DATA 25,18
0056:  DATA B2,3A
0057:  DATA A0,21
0058:  DATA C1,24
0059:  DATA 00,00
005A:  DATA 4E,24
005B:  DATA C9,22
005C:  DATA 54,10
005D:  DATA C4,27
005E:  DATA 3A,10
005F:  DATA 25,18
0060:  DATA 32,36
0061:  DATA 75,10
0062:  DATA 43,00
*
0104:  MOVLW  8E
0105:  MOVWF  77
0106:  MOVF   39,W
0107:  MOVWF  78
0108:  MOVF   38,W
0109:  MOVWF  79
010A:  CLRF   7A
010B:  MOVF   78,F
010C:  BTFSS  03.2
010D:  GOTO   118
010E:  MOVF   79,W
010F:  MOVWF  78
0110:  CLRF   79
0111:  MOVLW  08
0112:  SUBWF  77,F
0113:  MOVF   78,F
0114:  BTFSS  03.2
0115:  GOTO   118
0116:  CLRF   77
0117:  GOTO   120
0118:  BCF    03.0
0119:  BTFSC  78.7
011A:  GOTO   11F
011B:  RLF    79,F
011C:  RLF    78,F
011D:  DECF   77,F
011E:  GOTO   118
011F:  BCF    78.7
*
0130:  MOVF   38,W
0131:  BTFSC  03.2
0132:  GOTO   1A0
0133:  MOVWF  40
0134:  MOVF   3C,W
0135:  BTFSC  03.2
0136:  GOTO   1A0
0137:  ADDWF  40,F
0138:  BTFSC  03.0
0139:  GOTO   141
013A:  MOVLW  7F
013B:  SUBWF  40,F
013C:  BTFSS  03.0
013D:  GOTO   1A0
013E:  BTFSC  03.2
013F:  GOTO   1A0
0140:  GOTO   145
0141:  MOVLW  81
0142:  ADDWF  40,F
0143:  BTFSC  03.0
0144:  GOTO   1A0
0145:  MOVF   40,W
0146:  MOVWF  77
0147:  CLRF   78
0148:  CLRF   79
0149:  CLRF   7A
014A:  MOVF   39,W
014B:  MOVWF  44
014C:  BSF    44.7
014D:  MOVF   3A,W
014E:  MOVWF  43
014F:  MOVF   3B,W
0150:  MOVWF  42
0151:  MOVLW  18
0152:  MOVWF  40
0153:  CLRF   41
0154:  BTFSS  42.0
0155:  GOTO   16E
0156:  MOVF   3F,W
0157:  ADDWF  7A,F
0158:  BTFSS  03.0
0159:  GOTO   160
015A:  INCF   79,F
015B:  BTFSS  03.2
015C:  GOTO   160
015D:  INCF   78,F
015E:  BTFSC  03.2
015F:  BSF    41.7
0160:  MOVF   3E,W
0161:  ADDWF  79,F
0162:  BTFSS  03.0
0163:  GOTO   167
0164:  INCF   78,F
0165:  BTFSC  03.2
0166:  BSF    41.7
0167:  MOVF   3D,W
0168:  MOVWF  3A
0169:  BSF    3A.7
016A:  MOVF   3A,W
016B:  ADDWF  78,F
016C:  BTFSC  03.0
016D:  BSF    41.7
016E:  RLF    41,F
016F:  RRF    78,F
0170:  RRF    79,F
0171:  RRF    7A,F
0172:  RRF    44,F
0173:  RRF    43,F
0174:  RRF    42,F
0175:  BCF    03.0
0176:  DECFSZ 40,F
0177:  GOTO   153
0178:  MOVLW  01
0179:  ADDWF  77,F
017A:  BTFSC  03.0
017B:  GOTO   1A0
017C:  BTFSC  78.7
017D:  GOTO   185
017E:  RLF    44,F
017F:  RLF    7A,F
0180:  RLF    79,F
0181:  RLF    78,F
0182:  DECF   77,F
0183:  BTFSC  03.2
0184:  GOTO   1A0
0185:  BTFSS  44.7
0186:  GOTO   196
0187:  INCF   7A,F
0188:  BTFSS  03.2
0189:  GOTO   196
018A:  INCF   79,F
018B:  BTFSS  03.2
018C:  GOTO   196
018D:  INCF   78,F
018E:  BTFSS  03.2
018F:  GOTO   196
0190:  RRF    78,F
0191:  RRF    79,F
0192:  RRF    7A,F
0193:  INCF   77,F
0194:  BTFSC  03.2
0195:  GOTO   1A0
0196:  MOVF   39,W
0197:  MOVWF  41
0198:  MOVF   3D,W
0199:  XORWF  41,F
019A:  BTFSS  41.7
019B:  GOTO   19E
019C:  BSF    78.7
019D:  GOTO   1A4
019E:  BCF    78.7
019F:  GOTO   1A4
01A0:  CLRF   77
01A1:  CLRF   78
01A2:  CLRF   79
01A3:  CLRF   7A
*
01AC:  MOVLW  8E
01AD:  MOVWF  77
01AE:  MOVF   36,W
01AF:  SUBWF  77,F
01B0:  MOVF   37,W
01B1:  MOVWF  79
01B2:  MOVF   38,W
01B3:  MOVWF  78
01B4:  BSF    79.7
01B5:  MOVF   77,F
01B6:  BTFSC  03.2
01B7:  GOTO   1C3
01B8:  BCF    03.0
01B9:  MOVF   79,F
01BA:  BTFSS  03.2
01BB:  GOTO   1BF
01BC:  MOVF   78,F
01BD:  BTFSC  03.2
01BE:  GOTO   1C3
01BF:  RRF    79,F
01C0:  RRF    78,F
01C1:  DECFSZ 77,F
01C2:  GOTO   1B8
01C3:  BTFSS  37.7
01C4:  GOTO   1CA
01C5:  COMF   78,F
01C6:  COMF   79,F
01C7:  INCF   78,F
01C8:  BTFSC  03.2
01C9:  INCF   79,F
*
01EE:  MOVF   0B,W
01EF:  MOVWF  37
01F0:  BCF    0B.7
01F1:  BSF    03.5
01F2:  BSF    03.6
01F3:  BSF    0C.7
01F4:  BSF    0C.0
01F5:  NOP
01F6:  NOP
01F7:  BCF    03.5
01F8:  BCF    03.6
01F9:  BTFSC  37.7
01FA:  BSF    0B.7
01FB:  BTFSC  03.0
01FC:  GOTO   225
01FD:  BSF    03.6
01FE:  MOVF   0C,W
01FF:  ANDLW  7F
0200:  BCF    03.6
0201:  MOVWF  37
0202:  BSF    03.6
0203:  MOVF   0D,W
0204:  BCF    03.6
0205:  MOVWF  38
0206:  BSF    03.6
0207:  MOVF   0F,W
0208:  BCF    03.6
0209:  MOVWF  39
020A:  MOVF   37,W
020B:  MOVWF  3F
020C:  CALL   1D5
020D:  MOVF   38,W
020E:  BSF    03.6
020F:  MOVWF  0D
0210:  BCF    03.6
0211:  MOVF   39,W
0212:  BSF    03.6
0213:  MOVWF  0F
0214:  BCF    03.6
0215:  MOVF   0B,W
0216:  MOVWF  3A
0217:  BCF    0B.7
0218:  BSF    03.5
0219:  BSF    03.6
021A:  BSF    0C.7
021B:  BSF    0C.0
021C:  NOP
021D:  NOP
021E:  BCF    03.5
021F:  BCF    03.6
0220:  BTFSC  3A.7
0221:  BSF    0B.7
0222:  DECFSZ 36,F
0223:  GOTO   225
0224:  GOTO   244
0225:  BSF    03.6
0226:  RLF    0C,W
0227:  RLF    0E,W
0228:  ANDLW  7F
0229:  BCF    03.6
022A:  MOVWF  37
022B:  BSF    03.6
022C:  MOVF   0D,W
022D:  BCF    03.6
022E:  MOVWF  38
022F:  BSF    03.6
0230:  MOVF   0F,W
0231:  BCF    03.6
0232:  MOVWF  39
0233:  MOVF   37,W
0234:  MOVWF  3F
0235:  CALL   1D5
0236:  MOVF   38,W
0237:  BSF    03.6
0238:  MOVWF  0D
0239:  BCF    03.6
023A:  MOVF   39,W
023B:  BSF    03.6
023C:  MOVWF  0F
023D:  INCF   0D,F
023E:  BTFSC  03.2
023F:  INCF   0F,F
0240:  BCF    03.0
0241:  BCF    03.6
0242:  DECFSZ 36,F
0243:  GOTO   1EE
0244:  RETURN
0245:  MOVF   39,W
0246:  CLRF   78
0247:  SUBWF  38,W
0248:  BTFSC  03.0
0249:  GOTO   24D
024A:  MOVF   38,W
024B:  MOVWF  77
024C:  GOTO   259
024D:  CLRF   77
024E:  MOVLW  08
024F:  MOVWF  3A
0250:  RLF    38,F
0251:  RLF    77,F
0252:  MOVF   39,W
0253:  SUBWF  77,W
0254:  BTFSC  03.0
0255:  MOVWF  77
0256:  RLF    78,F
0257:  DECFSZ 3A,F
0258:  GOTO   250
0259:  RETURN
*
026B:  MOVF   36,W
026C:  MOVWF  38
026D:  MOVLW  64
026E:  MOVWF  39
026F:  CALL   245
0270:  MOVF   77,W
0271:  MOVWF  36
0272:  MOVF   78,W
0273:  MOVLW  30
0274:  BTFSS  03.2
0275:  GOTO   27D
0276:  BTFSS  37.1
0277:  GOTO   284
0278:  BTFSC  37.3
0279:  GOTO   284
027A:  BTFSC  37.4
027B:  MOVLW  20
027C:  GOTO   280
027D:  BCF    37.3
027E:  BCF    37.4
027F:  BSF    37.0
0280:  ADDWF  78,F
0281:  MOVF   78,W
0282:  MOVWF  3F
0283:  CALL   1D5
0284:  MOVF   36,W
0285:  MOVWF  38
0286:  MOVLW  0A
0287:  MOVWF  39
0288:  CALL   245
0289:  MOVF   77,W
028A:  MOVWF  36
028B:  MOVF   78,W
028C:  MOVLW  30
028D:  BTFSS  03.2
028E:  GOTO   295
028F:  BTFSC  37.3
0290:  GOTO   299
0291:  BTFSS  37.0
0292:  GOTO   299
0293:  BTFSC  37.4
0294:  MOVLW  20
0295:  ADDWF  78,F
0296:  MOVF   78,W
0297:  MOVWF  3F
0298:  CALL   1D5
0299:  MOVLW  30
029A:  ADDWF  36,F
029B:  MOVF   36,W
029C:  MOVWF  3F
029D:  CALL   1D5
*
02BB:  CLRF   3E
02BC:  MOVF   04,W
02BD:  MOVWF  3D
02BE:  BCF    3E.0
02BF:  BTFSC  03.7
02C0:  BSF    3E.0
02C1:  SWAPF  37,W
02C2:  IORLW  F0
02C3:  MOVWF  39
02C4:  ADDWF  39,F
02C5:  ADDLW  E2
02C6:  MOVWF  3A
02C7:  ADDLW  32
02C8:  MOVWF  3C
02C9:  MOVF   37,W
02CA:  ANDLW  0F
02CB:  ADDWF  3A,F
02CC:  ADDWF  3A,F
02CD:  ADDWF  3C,F
02CE:  ADDLW  E9
02CF:  MOVWF  3B
02D0:  ADDWF  3B,F
02D1:  ADDWF  3B,F
02D2:  SWAPF  36,W
02D3:  ANDLW  0F
02D4:  ADDWF  3B,F
02D5:  ADDWF  3C,F
02D6:  RLF    3B,F
02D7:  RLF    3C,F
02D8:  COMF   3C,F
02D9:  RLF    3C,F
02DA:  MOVF   36,W
02DB:  ANDLW  0F
02DC:  ADDWF  3C,F
02DD:  RLF    39,F
02DE:  MOVLW  07
02DF:  MOVWF  38
02E0:  MOVLW  0A
02E1:  ADDWF  3C,F
02E2:  DECF   3B,F
02E3:  BTFSS  03.0
02E4:  GOTO   2E1
02E5:  ADDWF  3B,F
02E6:  DECF   3A,F
02E7:  BTFSS  03.0
02E8:  GOTO   2E5
02E9:  ADDWF  3A,F
02EA:  DECF   39,F
02EB:  BTFSS  03.0
02EC:  GOTO   2E9
02ED:  ADDWF  39,F
02EE:  DECF   38,F
02EF:  BTFSS  03.0
02F0:  GOTO   2ED
02F1:  MOVLW  38
02F2:  MOVWF  04
02F3:  BCF    03.7
02F4:  MOVLW  07
02F5:  ANDWF  3D,W
02F6:  BCF    3D.6
02F7:  ADDWF  04,F
02F8:  MOVLW  3C
02F9:  SUBWF  04,W
02FA:  BTFSC  03.2
02FB:  BSF    3D.6
02FC:  MOVF   00,W
02FD:  MOVWF  77
02FE:  BTFSS  03.2
02FF:  GOTO   308
0300:  BTFSC  3D.6
0301:  GOTO   308
0302:  BTFSC  3D.4
0303:  GOTO   31A
0304:  BTFSC  3D.3
0305:  GOTO   308
0306:  MOVLW  20
0307:  GOTO   30B
0308:  BSF    3D.3
0309:  BCF    3D.4
030A:  MOVLW  30
030B:  ADDWF  77,F
030C:  CLRF   37
030D:  MOVF   04,W
030E:  MOVWF  36
030F:  BCF    37.0
0310:  BTFSC  03.7
0311:  BSF    37.0
0312:  MOVF   77,W
0313:  MOVWF  3F
0314:  CALL   1D5
0315:  MOVF   36,W
0316:  MOVWF  04
0317:  BCF    03.7
0318:  BTFSC  37.0
0319:  BSF    03.7
031A:  INCF   04,F
031B:  BTFSS  3D.6
031C:  GOTO   2F8
.................... 
.................... #list
.................... 
.................... #device adc = 10
.................... #fuses hs
.................... #use delay(clock=20M)
*
0082:  MOVLW  03
0083:  SUBWF  40,F
0084:  BTFSS  03.0
0085:  GOTO   090
0086:  MOVLW  40
0087:  MOVWF  04
0088:  BCF    03.7
0089:  MOVF   00,W
008A:  BTFSC  03.2
008B:  GOTO   090
008C:  GOTO   08E
008D:  GOTO   08E
008E:  DECFSZ 00,F
008F:  GOTO   08D
0090:  RETURN
*
00AA:  MOVLW  36
00AB:  MOVWF  04
00AC:  BCF    03.7
00AD:  MOVF   00,W
00AE:  BTFSC  03.2
00AF:  GOTO   0BD
00B0:  MOVLW  06
00B1:  MOVWF  78
00B2:  CLRF   77
00B3:  DECFSZ 77,F
00B4:  GOTO   0B3
00B5:  DECFSZ 78,F
00B6:  GOTO   0B2
00B7:  MOVLW  7B
00B8:  MOVWF  77
00B9:  DECFSZ 77,F
00BA:  GOTO   0B9
00BB:  DECFSZ 00,F
00BC:  GOTO   0B0
00BD:  RETURN
.................... #USE RS232(baud =9600,xmit = pin_c6, rcv = pin_c7)
.................... unsigned int8 kqsp,nhansp,i=0,nhantt;
.................... unsigned int16 kqadc,nhanadc,duty=0;
.................... #define lcd_rs          pin_b0
.................... #define lcd_rw          pin_b1
.................... #define lcd_e           pin_b2
.................... #define output_lcd      output_d
.................... #include<tv_lcd.c>
.................... void lcd_command(int8 a)
.................... {
....................       output_low(lcd_rw);
*
0091:  BSF    03.5
0092:  BCF    06.1
0093:  BCF    03.5
0094:  BCF    06.1
....................       output_low(lcd_rs);
0095:  BSF    03.5
0096:  BCF    06.0
0097:  BCF    03.5
0098:  BCF    06.0
....................       output_lcd(a);
0099:  BSF    03.5
009A:  CLRF   08
009B:  BCF    03.5
009C:  MOVF   36,W
009D:  MOVWF  08
....................       output_high(lcd_e);
009E:  BSF    03.5
009F:  BCF    06.2
00A0:  BCF    03.5
00A1:  BSF    06.2
....................       output_low(lcd_e);
00A2:  BSF    03.5
00A3:  BCF    06.2
00A4:  BCF    03.5
00A5:  BCF    06.2
....................       delay_us(200);
00A6:  MOVLW  C8
00A7:  MOVWF  40
00A8:  CALL   082
00A9:  RETURN
.................... }
.................... void lcd_data(int8 a)
.................... {
....................       output_low(lcd_rw);
*
01D5:  BSF    03.5
01D6:  BCF    06.1
01D7:  BCF    03.5
01D8:  BCF    06.1
....................       output_high(lcd_rs);
01D9:  BSF    03.5
01DA:  BCF    06.0
01DB:  BCF    03.5
01DC:  BSF    06.0
....................       output_lcd(a);
01DD:  BSF    03.5
01DE:  CLRF   08
01DF:  BCF    03.5
01E0:  MOVF   3F,W
01E1:  MOVWF  08
....................       output_high(lcd_e);
01E2:  BSF    03.5
01E3:  BCF    06.2
01E4:  BCF    03.5
01E5:  BSF    06.2
....................       output_low(lcd_e);
01E6:  BSF    03.5
01E7:  BCF    06.2
01E8:  BCF    03.5
01E9:  BCF    06.2
....................       delay_us(200);
01EA:  MOVLW  C8
01EB:  MOVWF  40
01EC:  CALL   082
01ED:  RETURN
.................... }
.................... void lcd_setup()
.................... {     
....................       lcd_command(0x38); delay_ms(5);
*
00BE:  MOVLW  38
00BF:  MOVWF  36
00C0:  CALL   091
00C1:  MOVLW  05
00C2:  MOVWF  36
00C3:  CALL   0AA
....................       lcd_command(0x0c); 
00C4:  MOVLW  0C
00C5:  MOVWF  36
00C6:  CALL   091
....................       lcd_command(0x01); delay_ms(2);
00C7:  MOVLW  01
00C8:  MOVWF  36
00C9:  CALL   091
00CA:  MOVLW  02
00CB:  MOVWF  36
00CC:  CALL   0AA
00CD:  BCF    0A.3
00CE:  BCF    0A.4
00CF:  GOTO   360 (RETURN)
.................... }
.................... 
.................... void demsp()
.................... {
....................    kqsp=get_timer1();
00D0:  MOVF   0F,W
00D1:  MOVWF  7A
00D2:  MOVF   0E,W
00D3:  MOVWF  77
00D4:  MOVF   0F,W
00D5:  SUBWF  7A,W
00D6:  BTFSS  03.2
00D7:  GOTO   0D0
00D8:  MOVF   77,W
00D9:  MOVWF  2B
....................    if(kqsp>24) set_timer1(1);
00DA:  MOVF   2B,W
00DB:  SUBLW  18
00DC:  BTFSC  03.0
00DD:  GOTO   0E3
00DE:  CLRF   0E
00DF:  CLRF   0F
00E0:  MOVLW  01
00E1:  MOVWF  0E
00E2:  NOP
....................    putc(kqsp);
00E3:  MOVF   2B,W
00E4:  BTFSS  0C.4
00E5:  GOTO   0E4
00E6:  MOVWF  19
00E7:  BCF    0A.3
00E8:  BCF    0A.4
00E9:  GOTO   3AC (RETURN)
.................... }
.................... void lm35()
.................... {
....................    set_adc_channel(4);
00EA:  MOVLW  10
00EB:  MOVWF  78
00EC:  MOVF   1F,W
00ED:  ANDLW  C3
00EE:  IORWF  78,W
00EF:  MOVWF  1F
....................    delay_ms(1);
00F0:  MOVLW  01
00F1:  MOVWF  36
00F2:  CALL   0AA
....................    kqadc=read_adc()*0.489;
00F3:  BSF    1F.1
00F4:  BTFSC  1F.1
00F5:  GOTO   0F4
00F6:  MOVF   1E,W
00F7:  MOVWF  79
00F8:  BSF    03.5
00F9:  MOVF   1E,W
00FA:  MOVWF  78
00FB:  MOVF   79,W
00FC:  BCF    03.5
00FD:  MOVWF  37
00FE:  MOVF   78,W
00FF:  MOVWF  36
0100:  MOVF   37,W
0101:  MOVWF  39
0102:  MOVF   36,W
0103:  MOVWF  38
*
0120:  MOVF   7A,W
0121:  MOVWF  3B
0122:  MOVF   79,W
0123:  MOVWF  3A
0124:  MOVF   78,W
0125:  MOVWF  39
0126:  MOVF   77,W
0127:  MOVWF  38
0128:  MOVLW  35
0129:  MOVWF  3F
012A:  MOVLW  5E
012B:  MOVWF  3E
012C:  MOVLW  7A
012D:  MOVWF  3D
012E:  MOVLW  7D
012F:  MOVWF  3C
*
01A4:  MOVF   7A,W
01A5:  MOVWF  39
01A6:  MOVF   79,W
01A7:  MOVWF  38
01A8:  MOVF   78,W
01A9:  MOVWF  37
01AA:  MOVF   77,W
01AB:  MOVWF  36
*
01CA:  MOVF   79,W
01CB:  MOVWF  30
01CC:  MOVF   78,W
01CD:  MOVWF  2F
....................    putc(kqadc);
01CE:  MOVF   2F,W
01CF:  BTFSS  0C.4
01D0:  GOTO   1CF
01D1:  MOVWF  19
01D2:  BCF    0A.3
01D3:  BCF    0A.4
01D4:  GOTO   3AD (RETURN)
.................... }
.................... void hienthi()
.................... {
....................    lcd_command(0x80);
*
025A:  MOVLW  80
025B:  MOVWF  36
025C:  CALL   091
....................    printf(lcd_data,"DEM SP: %02u CAI", nhansp);
025D:  MOVLW  51
025E:  BSF    03.6
025F:  MOVWF  0D
0260:  MOVLW  00
0261:  MOVWF  0F
0262:  BCF    03.0
0263:  MOVLW  08
0264:  BCF    03.6
0265:  MOVWF  36
0266:  CALL   1EE
0267:  MOVF   2C,W
0268:  MOVWF  36
0269:  MOVLW  01
026A:  MOVWF  37
*
029E:  MOVLW  57
029F:  BSF    03.6
02A0:  MOVWF  0D
02A1:  MOVLW  00
02A2:  MOVWF  0F
02A3:  BCF    03.0
02A4:  MOVLW  04
02A5:  BCF    03.6
02A6:  MOVWF  36
02A7:  CALL   1EE
....................    lcd_command(0xc0);
02A8:  MOVLW  C0
02A9:  MOVWF  36
02AA:  CALL   091
....................    printf(lcd_data,"NHIET DO: %02lu C", nhanadc);
02AB:  MOVLW  5A
02AC:  BSF    03.6
02AD:  MOVWF  0D
02AE:  MOVLW  00
02AF:  MOVWF  0F
02B0:  BCF    03.0
02B1:  MOVLW  0A
02B2:  BCF    03.6
02B3:  MOVWF  36
02B4:  CALL   1EE
02B5:  MOVLW  0B
02B6:  MOVWF  04
02B7:  MOVF   32,W
02B8:  MOVWF  37
02B9:  MOVF   31,W
02BA:  MOVWF  36
*
031D:  MOVLW  20
031E:  MOVWF  3F
031F:  CALL   1D5
0320:  MOVLW  43
0321:  MOVWF  3F
0322:  CALL   1D5
....................    lcd_command(0xc0+12);
0323:  MOVLW  CC
0324:  MOVWF  36
0325:  CALL   091
....................    lcd_data(0xdf);
0326:  MOVLW  DF
0327:  MOVWF  3F
0328:  CALL   1D5
0329:  BCF    0A.3
032A:  BCF    0A.4
032B:  GOTO   3AE (RETURN)
.................... }
.................... void main()
032C:  MOVF   03,W
032D:  ANDLW  1F
032E:  MOVWF  03
032F:  BSF    03.5
0330:  BSF    03.6
0331:  BSF    07.3
0332:  MOVLW  08
0333:  BCF    03.6
0334:  MOVWF  19
0335:  MOVLW  02
0336:  MOVWF  1A
0337:  MOVLW  A6
0338:  MOVWF  18
0339:  MOVLW  90
033A:  BCF    03.5
033B:  MOVWF  18
033C:  CLRF   2D
033D:  CLRF   34
033E:  CLRF   33
033F:  MOVLW  FF
0340:  MOVWF  35
0341:  BSF    03.5
0342:  BSF    03.6
0343:  MOVF   09,W
0344:  ANDLW  C0
0345:  MOVWF  09
0346:  BCF    03.6
0347:  BCF    1F.4
0348:  BCF    1F.5
0349:  MOVLW  00
034A:  BSF    03.6
034B:  MOVWF  08
034C:  BCF    03.5
034D:  CLRF   07
034E:  CLRF   08
034F:  CLRF   09
0350:  BCF    03.7
.................... {
....................    set_tris_a(0xff);
0351:  MOVLW  FF
0352:  BSF    03.5
0353:  BCF    03.6
0354:  MOVWF  05
....................    set_tris_b(0);
0355:  MOVLW  00
0356:  MOVWF  06
....................    set_tris_c(0x81);
0357:  MOVLW  81
0358:  MOVWF  07
0359:  BCF    03.5
035A:  MOVWF  35
....................    set_tris_d(0);
035B:  MOVLW  00
035C:  BSF    03.5
035D:  MOVWF  08
....................    lcd_setup();
035E:  BCF    03.5
035F:  GOTO   0BE
....................    setup_timer_1(T1_EXTERNAL|T1_DIV_BY_1);
0360:  MOVLW  07
0361:  MOVWF  10
....................    set_timer1(0);
0362:  CLRF   0E
0363:  CLRF   0F
0364:  CLRF   0E
0365:  NOP
....................    setup_timer_2(T2_DIV_BY_16,249,1);
0366:  MOVLW  00
0367:  MOVWF  78
0368:  IORLW  06
0369:  MOVWF  12
036A:  MOVLW  F9
036B:  BSF    03.5
036C:  MOVWF  12
....................    setup_ccp1(CCP_PWM);
036D:  BCF    03.5
036E:  BCF    35.2
036F:  MOVF   35,W
0370:  BSF    03.5
0371:  MOVWF  07
0372:  BCF    03.5
0373:  BCF    07.2
0374:  MOVLW  0C
0375:  MOVWF  17
0376:  BSF    03.5
0377:  CLRF   1B
0378:  CLRF   1C
0379:  MOVLW  01
037A:  MOVWF  1D
....................    output_low(pin_c1);
037B:  BCF    03.5
037C:  BCF    35.1
037D:  MOVF   35,W
037E:  BSF    03.5
037F:  MOVWF  07
0380:  BCF    03.5
0381:  BCF    07.1
....................    set_pwm1_duty(duty);
0382:  MOVF   34,W
0383:  MOVWF  79
0384:  MOVF   33,W
0385:  MOVWF  78
0386:  RRF    79,F
0387:  RRF    78,F
0388:  RRF    79,F
0389:  RRF    78,F
038A:  RRF    79,F
038B:  MOVF   78,W
038C:  MOVWF  15
038D:  RRF    79,F
038E:  RRF    79,W
038F:  ANDLW  30
0390:  MOVWF  77
0391:  MOVF   17,W
0392:  ANDLW  CF
0393:  IORWF  77,W
0394:  MOVWF  17
....................    setup_adc(ADC_CLOCK_DIV_32);
0395:  BCF    1F.6
0396:  BSF    1F.7
0397:  BSF    03.5
0398:  BSF    1F.7
0399:  BCF    03.5
039A:  BSF    1F.0
....................    setup_adc_ports(SAN4|VSS_VDD);
039B:  BSF    03.5
039C:  BSF    03.6
039D:  MOVF   09,W
039E:  ANDLW  C0
039F:  MOVWF  09
03A0:  BCF    03.6
03A1:  BCF    1F.4
03A2:  BCF    1F.5
03A3:  MOVLW  10
03A4:  BSF    03.6
03A5:  MOVWF  08
....................    enable_interrupts(INT_RDA);
03A6:  BCF    03.6
03A7:  BSF    0C.5
....................    enable_interrupts(GLOBAL);
03A8:  MOVLW  C0
03A9:  BCF    03.5
03AA:  IORWF  0B,F
....................    while(true)
....................    {
....................       demsp();
03AB:  GOTO   0D0
....................       lm35();
03AC:  GOTO   0EA
....................       hienthi();
03AD:  GOTO   25A
....................       if(nhanadc<=50) duty = 200;
03AE:  MOVF   32,F
03AF:  BTFSS  03.2
03B0:  GOTO   3B8
03B1:  MOVF   31,W
03B2:  SUBLW  32
03B3:  BTFSS  03.0
03B4:  GOTO   3B8
03B5:  CLRF   34
03B6:  MOVLW  C8
03B7:  MOVWF  33
....................       if(nhanadc>50 && nhanadc<=100) duty = 750;
03B8:  MOVF   32,F
03B9:  BTFSS  03.2
03BA:  GOTO   3BF
03BB:  MOVF   31,W
03BC:  SUBLW  32
03BD:  BTFSC  03.0
03BE:  GOTO   3CA
03BF:  MOVF   32,F
03C0:  BTFSS  03.2
03C1:  GOTO   3CA
03C2:  MOVF   31,W
03C3:  SUBLW  64
03C4:  BTFSS  03.0
03C5:  GOTO   3CA
03C6:  MOVLW  02
03C7:  MOVWF  34
03C8:  MOVLW  EE
03C9:  MOVWF  33
....................       if(nhanadc>100) duty = 1000;
03CA:  MOVF   32,F
03CB:  BTFSS  03.2
03CC:  GOTO   3D1
03CD:  MOVF   31,W
03CE:  SUBLW  64
03CF:  BTFSC  03.0
03D0:  GOTO   3D5
03D1:  MOVLW  03
03D2:  MOVWF  34
03D3:  MOVLW  E8
03D4:  MOVWF  33
....................       if(nhantt==1) set_pwm1_duty(duty); 
03D5:  DECFSZ 2E,W
03D6:  GOTO   3EB
03D7:  MOVF   34,W
03D8:  MOVWF  79
03D9:  MOVF   33,W
03DA:  MOVWF  78
03DB:  RRF    79,F
03DC:  RRF    78,F
03DD:  RRF    79,F
03DE:  RRF    78,F
03DF:  RRF    79,F
03E0:  MOVF   78,W
03E1:  MOVWF  15
03E2:  RRF    79,F
03E3:  RRF    79,W
03E4:  ANDLW  30
03E5:  MOVWF  77
03E6:  MOVF   17,W
03E7:  ANDLW  CF
03E8:  IORWF  77,W
03E9:  MOVWF  17
03EA:  GOTO   3EF
....................       else set_pwm1_duty((int16)0);
03EB:  CLRF   15
03EC:  MOVF   17,W
03ED:  ANDLW  CF
03EE:  MOVWF  17
03EF:  GOTO   3AB
....................    }
.................... }
.................... #INT_RDA
.................... void ngatuart()
03F0:  SLEEP
.................... {
....................    if(i==0) nhansp=getc();
*
0063:  MOVF   2D,F
0064:  BTFSS  03.2
0065:  GOTO   06A
0066:  BTFSS  0C.5
0067:  GOTO   066
0068:  MOVF   1A,W
0069:  MOVWF  2C
....................    if(i==1) nhanadc=getc();
006A:  DECFSZ 2D,W
006B:  GOTO   071
006C:  BTFSS  0C.5
006D:  GOTO   06C
006E:  MOVF   1A,W
006F:  CLRF   32
0070:  MOVWF  31
....................    if(i==2) nhantt=getc();
0071:  MOVF   2D,W
0072:  SUBLW  02
0073:  BTFSS  03.2
0074:  GOTO   079
0075:  BTFSS  0C.5
0076:  GOTO   075
0077:  MOVF   1A,W
0078:  MOVWF  2E
....................    i++;
0079:  INCF   2D,F
....................    if(i>2)i=0;
007A:  MOVF   2D,W
007B:  SUBLW  02
007C:  BTFSS  03.0
007D:  CLRF   2D
007E:  BCF    0C.5
007F:  BCF    0A.3
0080:  BCF    0A.4
0081:  GOTO   02D
.................... }

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
