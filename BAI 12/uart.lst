CCS PCM C Compiler, Version 5.115, 43599               22-Nov-23 00:23

               Filename:   C:\Users\84859\Desktop\VXL\BAI 12\uart.lst

               ROM used:   634 words (8%)
                           Largest free fragment is 2048
               RAM used:   19 (5%) at main() level
                           34 (9%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  02
0001:  MOVWF  0A
0002:  GOTO   229
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.5
001A:  GOTO   01D
001B:  BTFSC  0C.5
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   03F
.................... #include<16f887.h>
.................... //////////// Standard Header file for the PIC16F887 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F887
0031:  BCF    0A.0
0032:  BCF    0A.1
0033:  BCF    0A.2
0034:  ADDWF  02,F
0035:  RETLW  C0
0036:  RETLW  F9
0037:  RETLW  A4
0038:  RETLW  B0
0039:  RETLW  99
003A:  RETLW  92
003B:  RETLW  82
003C:  RETLW  F8
003D:  RETLW  80
003E:  RETLW  90
*
0097:  MOVLW  8E
0098:  MOVWF  77
0099:  MOVF   31,W
009A:  MOVWF  78
009B:  MOVF   30,W
009C:  MOVWF  79
009D:  CLRF   7A
009E:  MOVF   78,F
009F:  BTFSS  03.2
00A0:  GOTO   0AB
00A1:  MOVF   79,W
00A2:  MOVWF  78
00A3:  CLRF   79
00A4:  MOVLW  08
00A5:  SUBWF  77,F
00A6:  MOVF   78,F
00A7:  BTFSS  03.2
00A8:  GOTO   0AB
00A9:  CLRF   77
00AA:  GOTO   0B3
00AB:  BCF    03.0
00AC:  BTFSC  78.7
00AD:  GOTO   0B2
00AE:  RLF    79,F
00AF:  RLF    78,F
00B0:  DECF   77,F
00B1:  GOTO   0AB
00B2:  BCF    78.7
*
00C3:  MOVF   30,W
00C4:  BTFSC  03.2
00C5:  GOTO   133
00C6:  MOVWF  38
00C7:  MOVF   34,W
00C8:  BTFSC  03.2
00C9:  GOTO   133
00CA:  ADDWF  38,F
00CB:  BTFSC  03.0
00CC:  GOTO   0D4
00CD:  MOVLW  7F
00CE:  SUBWF  38,F
00CF:  BTFSS  03.0
00D0:  GOTO   133
00D1:  BTFSC  03.2
00D2:  GOTO   133
00D3:  GOTO   0D8
00D4:  MOVLW  81
00D5:  ADDWF  38,F
00D6:  BTFSC  03.0
00D7:  GOTO   133
00D8:  MOVF   38,W
00D9:  MOVWF  77
00DA:  CLRF   78
00DB:  CLRF   79
00DC:  CLRF   7A
00DD:  MOVF   31,W
00DE:  MOVWF  3C
00DF:  BSF    3C.7
00E0:  MOVF   32,W
00E1:  MOVWF  3B
00E2:  MOVF   33,W
00E3:  MOVWF  3A
00E4:  MOVLW  18
00E5:  MOVWF  38
00E6:  CLRF   39
00E7:  BTFSS  3A.0
00E8:  GOTO   101
00E9:  MOVF   37,W
00EA:  ADDWF  7A,F
00EB:  BTFSS  03.0
00EC:  GOTO   0F3
00ED:  INCF   79,F
00EE:  BTFSS  03.2
00EF:  GOTO   0F3
00F0:  INCF   78,F
00F1:  BTFSC  03.2
00F2:  BSF    39.7
00F3:  MOVF   36,W
00F4:  ADDWF  79,F
00F5:  BTFSS  03.0
00F6:  GOTO   0FA
00F7:  INCF   78,F
00F8:  BTFSC  03.2
00F9:  BSF    39.7
00FA:  MOVF   35,W
00FB:  MOVWF  32
00FC:  BSF    32.7
00FD:  MOVF   32,W
00FE:  ADDWF  78,F
00FF:  BTFSC  03.0
0100:  BSF    39.7
0101:  RLF    39,F
0102:  RRF    78,F
0103:  RRF    79,F
0104:  RRF    7A,F
0105:  RRF    3C,F
0106:  RRF    3B,F
0107:  RRF    3A,F
0108:  BCF    03.0
0109:  DECFSZ 38,F
010A:  GOTO   0E6
010B:  MOVLW  01
010C:  ADDWF  77,F
010D:  BTFSC  03.0
010E:  GOTO   133
010F:  BTFSC  78.7
0110:  GOTO   118
0111:  RLF    3C,F
0112:  RLF    7A,F
0113:  RLF    79,F
0114:  RLF    78,F
0115:  DECF   77,F
0116:  BTFSC  03.2
0117:  GOTO   133
0118:  BTFSS  3C.7
0119:  GOTO   129
011A:  INCF   7A,F
011B:  BTFSS  03.2
011C:  GOTO   129
011D:  INCF   79,F
011E:  BTFSS  03.2
011F:  GOTO   129
0120:  INCF   78,F
0121:  BTFSS  03.2
0122:  GOTO   129
0123:  RRF    78,F
0124:  RRF    79,F
0125:  RRF    7A,F
0126:  INCF   77,F
0127:  BTFSC  03.2
0128:  GOTO   133
0129:  MOVF   31,W
012A:  MOVWF  39
012B:  MOVF   35,W
012C:  XORWF  39,F
012D:  BTFSS  39.7
012E:  GOTO   131
012F:  BSF    78.7
0130:  GOTO   137
0131:  BCF    78.7
0132:  GOTO   137
0133:  CLRF   77
0134:  CLRF   78
0135:  CLRF   79
0136:  CLRF   7A
*
013F:  MOVLW  8E
0140:  MOVWF  77
0141:  MOVF   2E,W
0142:  SUBWF  77,F
0143:  MOVF   2F,W
0144:  MOVWF  79
0145:  MOVF   30,W
0146:  MOVWF  78
0147:  BSF    79.7
0148:  MOVF   77,F
0149:  BTFSC  03.2
014A:  GOTO   156
014B:  BCF    03.0
014C:  MOVF   79,F
014D:  BTFSS  03.2
014E:  GOTO   152
014F:  MOVF   78,F
0150:  BTFSC  03.2
0151:  GOTO   156
0152:  RRF    79,F
0153:  RRF    78,F
0154:  DECFSZ 77,F
0155:  GOTO   14B
0156:  BTFSS  2F.7
0157:  GOTO   15D
0158:  COMF   78,F
0159:  COMF   79,F
015A:  INCF   78,F
015B:  BTFSC  03.2
015C:  INCF   79,F
*
016B:  MOVF   30,W
016C:  CLRF   78
016D:  SUBWF  2F,W
016E:  BTFSC  03.0
016F:  GOTO   173
0170:  MOVF   2F,W
0171:  MOVWF  77
0172:  GOTO   17F
0173:  CLRF   77
0174:  MOVLW  08
0175:  MOVWF  31
0176:  RLF    2F,F
0177:  RLF    77,F
0178:  MOVF   30,W
0179:  SUBWF  77,W
017A:  BTFSC  03.0
017B:  MOVWF  77
017C:  RLF    78,F
017D:  DECFSZ 31,F
017E:  GOTO   176
017F:  RETURN
0180:  CLRF   78
0181:  CLRF   79
0182:  CLRF   77
0183:  CLRF   7A
0184:  MOVF   33,W
0185:  BTFSS  03.2
0186:  GOTO   18A
0187:  MOVF   32,W
0188:  BTFSC  03.2
0189:  GOTO   1A4
018A:  MOVLW  10
018B:  MOVWF  34
018C:  BCF    03.0
018D:  RLF    30,F
018E:  RLF    31,F
018F:  RLF    77,F
0190:  RLF    7A,F
0191:  MOVF   33,W
0192:  SUBWF  7A,W
0193:  BTFSS  03.2
0194:  GOTO   197
0195:  MOVF   32,W
0196:  SUBWF  77,W
0197:  BTFSS  03.0
0198:  GOTO   1A0
0199:  MOVF   32,W
019A:  SUBWF  77,F
019B:  BTFSS  03.0
019C:  DECF   7A,F
019D:  MOVF   33,W
019E:  SUBWF  7A,F
019F:  BSF    03.0
01A0:  RLF    78,F
01A1:  RLF    79,F
01A2:  DECFSZ 34,F
01A3:  GOTO   18C
01A4:  RETURN
.................... 
.................... #list
.................... 
.................... #device adc = 10
.................... #fuses hs
.................... #use delay(clock=20M)
*
004C:  MOVLW  2E
004D:  MOVWF  04
004E:  BCF    03.7
004F:  MOVF   00,W
0050:  BTFSC  03.2
0051:  GOTO   05F
0052:  MOVLW  06
0053:  MOVWF  78
0054:  CLRF   77
0055:  DECFSZ 77,F
0056:  GOTO   055
0057:  DECFSZ 78,F
0058:  GOTO   054
0059:  MOVLW  7B
005A:  MOVWF  77
005B:  DECFSZ 77,F
005C:  GOTO   05B
005D:  DECFSZ 00,F
005E:  GOTO   052
005F:  RETURN
.................... #USE RS232(baud =9600,xmit = pin_c6, rcv = pin_c7)
.................... const unsigned int8 ma7doan[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
.................... unsigned int8 kq,nhan;
.................... unsigned int16 kqadc,nhanadc;
.................... void quetled()
.................... {
....................       output_d(ma7doan[nhan/10%10]); output_low(pin_b0); delay_ms(1);output_high(pin_b0);
*
01A5:  MOVF   28,W
01A6:  MOVWF  2F
01A7:  MOVLW  0A
01A8:  MOVWF  30
01A9:  CALL   16B
01AA:  MOVF   78,W
01AB:  MOVWF  2F
01AC:  MOVLW  0A
01AD:  MOVWF  30
01AE:  CALL   16B
01AF:  MOVF   77,W
01B0:  CALL   031
01B1:  MOVWF  2E
01B2:  BSF    03.5
01B3:  CLRF   08
01B4:  BCF    03.5
01B5:  MOVF   2E,W
01B6:  MOVWF  08
01B7:  BSF    03.5
01B8:  BCF    06.0
01B9:  BCF    03.5
01BA:  BCF    06.0
01BB:  MOVLW  01
01BC:  MOVWF  2E
01BD:  CALL   04C
01BE:  BSF    03.5
01BF:  BCF    06.0
01C0:  BCF    03.5
01C1:  BSF    06.0
....................       output_d(ma7doan[nhan/1%10]); output_low(pin_b1); delay_ms(1);output_high(pin_b1);
01C2:  MOVF   28,W
01C3:  MOVWF  2F
01C4:  MOVLW  0A
01C5:  MOVWF  30
01C6:  CALL   16B
01C7:  MOVF   77,W
01C8:  CALL   031
01C9:  MOVWF  2E
01CA:  BSF    03.5
01CB:  CLRF   08
01CC:  BCF    03.5
01CD:  MOVF   2E,W
01CE:  MOVWF  08
01CF:  BSF    03.5
01D0:  BCF    06.1
01D1:  BCF    03.5
01D2:  BCF    06.1
01D3:  MOVLW  01
01D4:  MOVWF  2E
01D5:  CALL   04C
01D6:  BSF    03.5
01D7:  BCF    06.1
01D8:  BCF    03.5
01D9:  BSF    06.1
....................       output_d(ma7doan[nhanadc/10%10]); output_low(pin_b2); delay_ms(1);output_high(pin_b2);
01DA:  MOVF   2C,W
01DB:  MOVWF  31
01DC:  MOVF   2B,W
01DD:  MOVWF  30
01DE:  CLRF   33
01DF:  MOVLW  0A
01E0:  MOVWF  32
01E1:  CALL   180
01E2:  MOVF   79,W
01E3:  MOVWF  2F
01E4:  MOVF   78,W
01E5:  MOVWF  2E
01E6:  MOVF   79,W
01E7:  MOVWF  31
01E8:  MOVF   78,W
01E9:  MOVWF  30
01EA:  CLRF   33
01EB:  MOVLW  0A
01EC:  MOVWF  32
01ED:  CALL   180
01EE:  MOVF   77,W
01EF:  MOVWF  2E
01F0:  MOVF   7A,W
01F1:  MOVWF  2F
01F2:  MOVWF  7A
01F3:  MOVF   77,W
01F4:  CALL   031
01F5:  MOVWF  30
01F6:  BSF    03.5
01F7:  CLRF   08
01F8:  BCF    03.5
01F9:  MOVF   30,W
01FA:  MOVWF  08
01FB:  BSF    03.5
01FC:  BCF    06.2
01FD:  BCF    03.5
01FE:  BCF    06.2
01FF:  MOVLW  01
0200:  MOVWF  2E
0201:  CALL   04C
0202:  BSF    03.5
0203:  BCF    06.2
0204:  BCF    03.5
0205:  BSF    06.2
....................       output_d(ma7doan[nhanadc/1%10]); output_low(pin_b3); delay_ms(1);output_high(pin_b3);
0206:  MOVF   2C,W
0207:  MOVWF  31
0208:  MOVF   2B,W
0209:  MOVWF  30
020A:  CLRF   33
020B:  MOVLW  0A
020C:  MOVWF  32
020D:  CALL   180
020E:  MOVF   77,W
020F:  MOVWF  2E
0210:  MOVF   7A,W
0211:  MOVWF  2F
0212:  MOVWF  7A
0213:  MOVF   77,W
0214:  CALL   031
0215:  MOVWF  30
0216:  BSF    03.5
0217:  CLRF   08
0218:  BCF    03.5
0219:  MOVF   30,W
021A:  MOVWF  08
021B:  BSF    03.5
021C:  BCF    06.3
021D:  BCF    03.5
021E:  BCF    06.3
021F:  MOVLW  01
0220:  MOVWF  2E
0221:  CALL   04C
0222:  BSF    03.5
0223:  BCF    06.3
0224:  BCF    03.5
0225:  BSF    06.3
0226:  BCF    0A.3
0227:  BCF    0A.4
0228:  GOTO   278 (RETURN)
.................... }
.................... void demsp()
.................... {
....................    kq=get_timer1();
*
0060:  MOVF   0F,W
0061:  MOVWF  7A
0062:  MOVF   0E,W
0063:  MOVWF  77
0064:  MOVF   0F,W
0065:  SUBWF  7A,W
0066:  BTFSS  03.2
0067:  GOTO   060
0068:  MOVF   77,W
0069:  MOVWF  27
....................    if(kq>24) set_timer1(1);
006A:  MOVF   27,W
006B:  SUBLW  18
006C:  BTFSC  03.0
006D:  GOTO   073
006E:  CLRF   0E
006F:  CLRF   0F
0070:  MOVLW  01
0071:  MOVWF  0E
0072:  NOP
....................    putc(kq);
0073:  MOVF   27,W
0074:  BTFSS  0C.4
0075:  GOTO   074
0076:  MOVWF  19
....................    delay_ms(100);
0077:  MOVLW  64
0078:  MOVWF  2E
0079:  CALL   04C
007A:  BCF    0A.3
007B:  BCF    0A.4
007C:  GOTO   276 (RETURN)
.................... }
.................... void lm35()
.................... {
....................    set_adc_channel(4);
007D:  MOVLW  10
007E:  MOVWF  78
007F:  MOVF   1F,W
0080:  ANDLW  C3
0081:  IORWF  78,W
0082:  MOVWF  1F
....................    delay_ms(1);
0083:  MOVLW  01
0084:  MOVWF  2E
0085:  CALL   04C
....................    kqadc=read_adc()*0.489;
0086:  BSF    1F.1
0087:  BTFSC  1F.1
0088:  GOTO   087
0089:  MOVF   1E,W
008A:  MOVWF  79
008B:  BSF    03.5
008C:  MOVF   1E,W
008D:  MOVWF  78
008E:  MOVF   79,W
008F:  BCF    03.5
0090:  MOVWF  2F
0091:  MOVF   78,W
0092:  MOVWF  2E
0093:  MOVF   2F,W
0094:  MOVWF  31
0095:  MOVF   2E,W
0096:  MOVWF  30
*
00B3:  MOVF   7A,W
00B4:  MOVWF  33
00B5:  MOVF   79,W
00B6:  MOVWF  32
00B7:  MOVF   78,W
00B8:  MOVWF  31
00B9:  MOVF   77,W
00BA:  MOVWF  30
00BB:  MOVLW  35
00BC:  MOVWF  37
00BD:  MOVLW  5E
00BE:  MOVWF  36
00BF:  MOVLW  7A
00C0:  MOVWF  35
00C1:  MOVLW  7D
00C2:  MOVWF  34
*
0137:  MOVF   7A,W
0138:  MOVWF  31
0139:  MOVF   79,W
013A:  MOVWF  30
013B:  MOVF   78,W
013C:  MOVWF  2F
013D:  MOVF   77,W
013E:  MOVWF  2E
*
015D:  MOVF   79,W
015E:  MOVWF  2A
015F:  MOVF   78,W
0160:  MOVWF  29
....................    putc(kqadc);
0161:  MOVF   29,W
0162:  BTFSS  0C.4
0163:  GOTO   162
0164:  MOVWF  19
....................    delay_ms(100);
0165:  MOVLW  64
0166:  MOVWF  2E
0167:  CALL   04C
0168:  BCF    0A.3
0169:  BCF    0A.4
016A:  GOTO   277 (RETURN)
.................... }
.................... void main()
*
0229:  MOVF   03,W
022A:  ANDLW  1F
022B:  MOVWF  03
022C:  BSF    03.5
022D:  BSF    03.6
022E:  BSF    07.3
022F:  MOVLW  08
0230:  BCF    03.6
0231:  MOVWF  19
0232:  MOVLW  02
0233:  MOVWF  1A
0234:  MOVLW  A6
0235:  MOVWF  18
0236:  MOVLW  90
0237:  BCF    03.5
0238:  MOVWF  18
0239:  MOVLW  FF
023A:  MOVWF  2D
023B:  BSF    03.5
023C:  BSF    03.6
023D:  MOVF   09,W
023E:  ANDLW  C0
023F:  MOVWF  09
0240:  BCF    03.6
0241:  BCF    1F.4
0242:  BCF    1F.5
0243:  MOVLW  00
0244:  BSF    03.6
0245:  MOVWF  08
0246:  BCF    03.5
0247:  CLRF   07
0248:  CLRF   08
0249:  CLRF   09
024A:  BCF    03.7
.................... {  
....................    set_tris_a(0xff);
024B:  MOVLW  FF
024C:  BSF    03.5
024D:  BCF    03.6
024E:  MOVWF  05
....................    set_tris_b(0);
024F:  MOVLW  00
0250:  MOVWF  06
....................    set_tris_c(0x81);
0251:  MOVLW  81
0252:  MOVWF  07
0253:  BCF    03.5
0254:  MOVWF  2D
....................    set_tris_d(0);
0255:  MOVLW  00
0256:  BSF    03.5
0257:  MOVWF  08
....................    setup_timer_1(T1_EXTERNAL|T1_DIV_BY_1);
0258:  MOVLW  07
0259:  BCF    03.5
025A:  MOVWF  10
....................    set_timer1(0);
025B:  CLRF   0E
025C:  CLRF   0F
025D:  CLRF   0E
025E:  NOP
....................    setup_adc(ADC_CLOCK_DIV_32);
025F:  BCF    1F.6
0260:  BSF    1F.7
0261:  BSF    03.5
0262:  BSF    1F.7
0263:  BCF    03.5
0264:  BSF    1F.0
....................    setup_adc_ports(SAN4|VSS_VDD);
0265:  BSF    03.5
0266:  BSF    03.6
0267:  MOVF   09,W
0268:  ANDLW  C0
0269:  MOVWF  09
026A:  BCF    03.6
026B:  BCF    1F.4
026C:  BCF    1F.5
026D:  MOVLW  10
026E:  BSF    03.6
026F:  MOVWF  08
....................    enable_interrupts(INT_RDA);
0270:  BCF    03.6
0271:  BSF    0C.5
....................    enable_interrupts(GLOBAL);
0272:  MOVLW  C0
0273:  BCF    03.5
0274:  IORWF  0B,F
....................    while(true)
....................    {
....................       demsp();
0275:  GOTO   060
....................       lm35();
0276:  GOTO   07D
....................       quetled();
0277:  GOTO   1A5
0278:  GOTO   275
....................    }
.................... }
.................... #INT_RDA
.................... void ngatuart()
0279:  SLEEP
.................... {
....................    nhan=getc();
*
003F:  BTFSS  0C.5
0040:  GOTO   03F
0041:  MOVF   1A,W
0042:  MOVWF  28
....................    nhanadc=getc();
0043:  BTFSS  0C.5
0044:  GOTO   043
0045:  MOVF   1A,W
0046:  CLRF   2C
0047:  MOVWF  2B
0048:  BCF    0C.5
0049:  BCF    0A.3
004A:  BCF    0A.4
004B:  GOTO   01D
.................... }
.................... 

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
